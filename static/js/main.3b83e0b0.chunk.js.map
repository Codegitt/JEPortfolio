{"version":3,"sources":["serviceWorker.js","Navbar.js","Home.js","App1-Input.js","App1.js","ReminderInput.js","ReminderTemplate.js","ReminderApp.js","App2.js","App3-Input.js","App3.js","App4.js","Post.js","JE Portfolio.js","rootReducer.js","index.js"],"names":["Boolean","window","location","hostname","match","withRouter","props","react_default","a","createElement","className","react_router_dom","to","href","class","data-target","id","Home","posts","this","postList","length","map","post","key","src","alt","style","color","title","body","Component","connect","state","App1Input","year","month","day","message","handleOnChangeYear","e","_this","setState","target","value","handleOnChangeMonth","handleOnChangeDay","handleSubmit","preventDefault","_this2","onSubmit","htmlFor","name","type","min","onChange","max","onClick","today","Date","futureDate","futureDate1","getFullYear","getMonth","getDate","today_ms","getTime","dateDiff_ms","totalDays","Math","ceil","year1","month1","day1","show","concat","error","fontSize","App1","eventDate","output","eventItem","eventItems","Object","toConsumableArray","displayMessage","item","App1_Input","answer","backgroundColor","ReminderInput","completed","handleOnChange","addReminder","reminders","deleteButton","action","Template","_ref","checked","fontStyle","textDecoration","ReminderApp","reminder","random","remind","nonDeletedItems","filter","prevState","todo","console","log","template","temp","ReminderTemplate","src_ReminderInput","App2","src_ReminderApp","App3Input","handleChangeMin","handleChangeMax","handleReset","placeholder","min1","floor","max1","equ","isNaN","App3","App3_Input","App4","textAlign","Post","ownProps","params","post_id","find","JEPortfolio","src_Navbar_0","react_router","exact","path","component","initState","rootReducer","arguments","undefined","store","createStore","ReactDOM","render","es","JE_Portfolio","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3b83e0b0.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport {Link,NavLink, withRouter} from 'react-router-dom';\r\nimport './Navbar.css';\r\n\r\nconst Navbar = (props) => {\r\n\r\n    return(\r\n        <header>\r\n        <nav className='nav-wrapper transparent'>\r\n            <div className='container'>\r\n              <NavLink to='/' className='brand-logo'>J.E. Portfolio</NavLink> \r\n              <a href=\"\" class=\"sidenav-trigger\" data-target='mobile-menu' >\r\n              <i className=\"material-icons\">menu</i>\r\n              </a>\r\n\r\n                <ul className='right'>\r\n                    <li><NavLink to='/'> Home </NavLink></li>  \r\n                    <li><NavLink to='/App1'> App1 </NavLink></li>  \r\n                    <li><NavLink to='/App2'> App2 </NavLink></li>\r\n                    <li><NavLink to='/App3'> App3 </NavLink></li>\r\n                    <li><NavLink to='/App4'> App4 </NavLink></li>\r\n                </ul>\r\n\r\n                <ul class='sidenav grey lighten-2' id='mobile-menu' > \r\n                    <li><NavLink to='/'> Home </NavLink></li>  \r\n                    <li><NavLink to='/App1'> App1 </NavLink></li>  \r\n                    <li><NavLink to='/App2'> App2 </NavLink></li>\r\n                    <li><NavLink to='/App3'> App3 </NavLink></li>\r\n                    <li><NavLink to='/App4'> App4 </NavLink></li>\r\n                </ul>\r\n            </div>\r\n        </nav>       \r\n        </header>  \r\n    )\r\n}\r\n\r\nexport default withRouter(Navbar);  ","import React, {Component} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {connect} from 'react-redux'; \r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport './Home.css';\r\n\r\n\r\nclass  Home extends Component {   \r\n\r\n \r\n    render() {        \r\n\r\n        const {posts} = this.props;  \r\n        const postList = posts.length ? (posts.map((post) => {\r\n\r\n            return(\r\n\r\n            <div className='background'>  \r\n\r\n                <Router>                  \r\n                 \r\n                 {/*<NavLink to={'/' + post.id }   >   target='_blank' */}                 \r\n                                 \r\n                \r\n               \r\n                 <div className='post card' key={post.id}>\r\n\r\n                 <img  src={post.src} alt='a pic' /> \r\n             \r\n\r\n               <div className='card-content'>\r\n\r\n                <span className='card-title' style={{color: 'blue'}}> {post.title} </span>\r\n\r\n                 <p><span style={{color:'black'}} >{post.body} </span> </p>\r\n                </div>\r\n             </div>          \r\n         \r\n              \r\n             {/*  </NavLink> */}\r\n                 \r\n             </Router>       \r\n             </div>\r\n\r\n        )})) : (\r\n            <div className='center' > Nothing yet. </div>)  \r\n\r\n        return(\r\n\r\n            <div className='container'>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <h3 className='center'><u><b>J.E. Portfolio</b></u></h3>\r\n            <br />\r\n            <br />\r\n             <p> {postList} </p>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n\r\n            \r\n            <div className=\"container indigo lighten-3\">\r\n            <div className='outline'>\r\n            <br />\r\n            \r\n            <h4 className='center'>About Me</h4>\r\n            <p className='center'>I am a self-taught Full Stack Developer who truly enjoys coding.  I built every app and webpage on this site from start to finish.</p>\r\n            <br />\r\n            <br />\r\n            </div>\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            \r\n             </div>\r\n    )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {  \r\n\r\n    return{ \r\n        posts:  state.posts  \r\n    }\r\n}  \r\n\r\nexport default  connect(mapStateToProps) (Home);  \r\n","import React, {Component} from 'react';\r\n\r\nclass App1Input extends Component {\r\n\r\n    state = {\r\n        year: ' ',\r\n        month: ' ',\r\n        day: ' ',\r\n        message: ' '\r\n    }\r\n\r\n\r\n    handleOnChangeYear = (e) => {\r\n        this.setState({\r\n            year: e.target.value });\r\n          \r\n\r\n    }\r\n\r\n    handleOnChangeMonth = (e) => {\r\n        this.setState({\r\n            month: e.target.value });\r\n      \r\n    }\r\n\r\n    handleOnChangeDay = (e) => {\r\n        this.setState({\r\n            day: e.target.value });\r\n      \r\n    }\r\n\r\n\r\n    \r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.setState({year: ' ', month: ' ', day: ' '}); \r\n    }\r\n\r\n    render() {\r\n\r\n        const style={\r\n            color: '#3C896D',\r\n            fontSize: '27px'            \r\n        }    \r\n\r\n\r\n        const output1 = () => {\r\n\r\n                try {\r\n\r\n                const year = this.state.year;\r\n                const month = this.state.month;\r\n                const day = this.state.day;               \r\n        \r\n                let today = new Date();\r\n                let futureDate = new Date(year, month - 1, day);\r\n                let futureDate1 = new Date(futureDate.getFullYear(), futureDate.getMonth(), futureDate.getDate());\r\n        \r\n                let bottom = (24 * 60 * 60 * 1000);\r\n                let today_ms = today.getTime();\r\n                let futureDate1_ms = futureDate1.getTime();\r\n        \r\n                // Calculates the difference between the two dates\r\n                let dateDiff_ms = futureDate1_ms - today_ms;\r\n        \r\n                let totalDays = Math.ceil(dateDiff_ms / bottom);\r\n        \r\n                let tody = new Date();\r\n                let year1 = today.getFullYear(); \r\n                let month1 = today.getMonth();\r\n                let day1 = today.getDate();\r\n        \r\n                \r\n                const {message} = ' ';\r\n                \r\n                let show = `You have ${totalDays} day(s) remaining until your upcoming event.`; \r\n                \r\n                                 \r\n                if (year == ' ')  throw 'You did not enter a number for \"Year\".'    \r\n                if (year < year1) throw  'The number for \"Year\" must be the same or greater than the current year.'                  \r\n                if (month == ' ') throw 'You did not enter a number for \"Month\".'\r\n                // if (month < month1+1) throw  \"<span style='color:red';>\" +  \"The number for 'Month' must be the same or greater than the current month.\" + \"</span>\";\r\n                if (month > 12)  throw 'The number for \"Month\" cannot be greater than 12.'\r\n                if (day == ' ')  throw 'You did not enter a number for \"Day\".' \r\n                if (day <= 0)  throw 'The number for \"Day\" must be greater than zero.' \r\n                if (day > 31)  throw 'The number for \"Day\" cannot be greater than 31.'                          \r\n                if (day < day1 && month <= month1+1 && year == year1)  throw 'The number for your \"Month\" and \"Day\" must be greater than today\\'s date.'            \r\n                //'You have ' + totalDays +  ' day(s) remaining until your upcoming event.'\r\n               \r\n                 \r\n                else { this.setState({ message: show}) }          \r\n                   \r\n                }\r\n        \r\n              catch (error) {      \r\n                     this.setState({message: error})                        \r\n              }            \r\n\r\n        }\r\n\r\n        \r\n        return(            \r\n\r\n            <div className='container'  >\r\n            <h3 className='center'>Event-Date Calculator App</h3>\r\n\r\n            <div className='center'>\r\n           \r\n            <p className='flow-text'>Select or type the year, month, and day of your upcoming event or deadline</p>\r\n\r\n            <br />\r\n            <form onSubmit={this.handleSubmit}>\r\n            <div className=\"input-field\">\r\n            <label htmlFor=\"year\">Year</label>\r\n            <input id=\"year\"  name='year'  value={this.state.year}  type=\"number\"  min=\"2019\" onChange={this.handleOnChangeYear} />\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <div className=\"input-field\">\r\n            <label htmlFor=\"month\">Month</label>\r\n            <input id=\"month\"  name='month'  value={this.state.month}  type=\"number\"  min=\"1\"  max=\"12\"  onChange={this.handleOnChangeMonth} />\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <div className=\"input-field\">\r\n            <label htmlFor=\"day\">Day</label>\r\n            <input id=\"day\"  name='day' value={this.state.day}  type=\"number\"  min=\"1\"  max=\"31\"  onChange={this.handleOnChangeDay} />\r\n            </div>\r\n            <br />\r\n            <br />        \r\n            <br />\r\n\r\n            <button  onClick={output1} className='btn-large blue lighten-3 waves-effect waves-light'> Submit</button> \r\n            <br />\r\n            </form>\r\n            <br />\r\n            <p> <span style={style}> <b> {this.state.message} </b> </span> </p>        \r\n            <br />\r\n            <br />\r\n            </div>       \r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App1Input;","import React, {Component} from 'react';\r\nimport App1Input from './App1-Input';\r\n\r\n\r\n\r\nclass App1 extends Component  { \r\n\r\n    state = {\r\n\r\n        eventDate:[\r\n            {\r\n\r\n            year: ' ',\r\n            month: ' ',\r\n            day: ' ',\r\n            message: ' '\r\n\r\n            }\r\n        ]\r\n    }\r\n\r\n    output = (eventItem) => {              \r\n        \r\n\r\n        const eventItems = [...this.state.eventDate, eventItem]\r\n        \r\n        this.setState({\r\n            eventDate: eventItems\r\n        })\r\n\r\n    } \r\n    \r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();  \r\n        this.props.output(this.state);  \r\n        this.setState({year: ' '});   \r\n        this.setState({month: ' '});   \r\n        this.setState({day: ' '});   \r\n\r\n    } \r\n\r\n\r\n    render() {\r\n\r\n        const displayMessage = this.state.eventDate.map(item => <App1Input  year={item.year}  month={item.month}  day={item.day}  message={item.message}  output={this.output} answer={this.answer}  handleSubmit={this.handleSubmit}  />)\r\n\r\n\r\n        const style ={\r\n            backgroundColor: '#f9e6ff'\r\n        }\r\n        \r\n       \r\n\r\n        return(\r\n\r\n            <div  style={style}  >\r\n\r\n                 <p>{displayMessage}</p>         \r\n                \r\n            </div>\r\n\r\n        )\r\n    }    \r\n}   \r\n\r\nexport default App1;","import React, {Component} from 'react';\r\n\r\nclass ReminderInput extends Component {  \r\n\r\n \r\n     state = {\r\n        item: ' ', \r\n        completed: null,       \r\n    }       \r\n\r\n    handleOnChange = (e) => {\r\n\r\n        this.setState({\r\n            item: e.target.value });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.props.addReminder(this.state); \r\n\r\n        this.setState({item: ' '});\r\n    }   \r\n    \r\n\r\n    render() { \r\n\r\n       const {reminders} = this.props\r\n\r\n       const {deleteButton} = this.props\r\n          \r\n\r\n        return(\r\n            <div className=\"container\">\r\n            <div className=\"center\"> \r\n            <section className='section container'>\r\n            <div className='row'>\r\n            <div className='col s12 l5 offset-l2'>            \r\n                <form  onSubmit={this.handleSubmit} action=''>\r\n                <br />\r\n                <br />\r\n                 \r\n                <br />\r\n                <div className=\"input-field\">\r\n                 <label htmlFor='item'>Enter Item:</label> \r\n                    <input  type='text'  value={this.state.item}  name='item'  onChange={this.handleOnChange}  id='item' />   \r\n                </div>                 \r\n                <br />             \r\n            \r\n                <br />         \r\n                 <button className='btn-large brown lighten-4 black-text waves-effect waves-light'>Submit</button>  \r\n                </form>\r\n                <br />\r\n                <br />\r\n                \r\n                    </div>\r\n                </div>\r\n            </section>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ReminderInput;\r\n","import React, {Component} from 'react';\r\nimport ReminderInput from './ReminderInput';\r\n\r\n\r\nconst Template = ({reminders, item, id, completed, addReminder, deleteButton, handleOnChange, handleSubmit}) =>  {\r\n \r\n        const style = {  \r\n        fontStyle: 'italic',\r\n        color: 'blue', \r\n        textDecoration: 'line-through'\r\n         }   \r\n\r\n         const deleteItem = () => {\r\n             deleteButton(id)\r\n         }\r\n    \r\n        return(\r\n\r\n            <div className='col s12 l5 offset-l2' >\r\n                <form onSubmit={handleSubmit} action=''>\r\n                    <div className='input-field'>\r\n                        <p>\r\n                            <label>\r\n                             <input type='checkbox' name='completed' checked={completed} value={completed} onChange={() => handleOnChange(id)}  id='completed' />  \r\n                             <span    style={completed ? style : null} > {item} </span>  \r\n\r\n                             <a href='#' class='btn-floating  btn-small red lighten-2  right'>\r\n                         <i class=\"material-icons right\" onClick={() => deleteButton(id)} >remove</i>\r\n                        </a>\r\n                            </label>     \r\n                        </p>                        \r\n                    </div>                               \r\n                </form>\r\n            </div>             \r\n                \r\n        )\r\n    }\r\n\r\nexport default Template;","import React, {Component} from 'react';\r\n\r\nimport ReminderInput from './ReminderInput'\r\nimport Template from './ReminderTemplate';\r\n\r\n\r\nclass ReminderApp extends Component {\r\n    state = {\r\n        reminders: [\r\n            {item: 'First item (You can delete this item by clicking on the \" - \" icon to the right.)', completed: false, id: ' '}\r\n        ]         \r\n    }\r\n\r\n    addReminder = (reminder) => {\r\n\r\n            reminder.id = Math.random();   \r\n\r\n          const remind = [...this.state.reminders, reminder];\r\n\r\n         this.setState({reminders: remind})\r\n\r\n    }\r\n\r\n    deleteButton = (id) => {\r\n\r\n        const nonDeletedItems = this.state.reminders.filter(remind => {\r\n            return remind.id !== id\r\n        });\r\n\r\n        this.setState({reminders: nonDeletedItems});\r\n    }\r\n\r\n\r\n    handleOnChange = (id) => {\r\n\r\n        this.setState(prevState => {  \r\n           let updatedReminders = prevState.reminders.map(todo => {  \r\n               if (todo.id === id) {\r\n                   todo.completed = !todo.completed  \r\n               }\r\n               return todo  \r\n           })\r\n\r\n           return{  \r\n               reminders: updatedReminders\r\n           };\r\n       }\r\n       ); \r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n\r\n        e.preventDefault(); \r\n\r\n        this.setState({item: ' '});  \r\n   }\r\n\r\n    componentDidUpdate() {\r\n        console.log(this.state.reminders);\r\n    }\r\n    \r\n\r\n    render() {\r\n         \r\n        \r\n          const template = this.state.reminders.map(temp => <Template   reminders={temp}  item={temp.item}  id={temp.id}  completed={temp.completed}    deleteButton={this.deleteButton} addReminder = {this.addReminder}  handleOnChange={this.handleOnChange}  handleSubmit={this.handleSubmit}  /> );  \r\n\r\n        \r\n        return(\r\n\r\n            <div>  \r\n                <h3> Reminder List:</h3>    \r\n                <br/>       \r\n                 <p> {template} </p>  \r\n               <ReminderInput  reminders={this.state.reminders}  addReminder = {this.addReminder}  item={this.state.reminders.item}    deleteButton={this.deleteButton} />\r\n                <br />\r\n                <br />             \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ReminderApp; \r\n\r\n","import React from 'react';\r\nimport ReminderApp from './ReminderApp';\r\n\r\n\r\nconst App2 = () => { \r\n\r\n    return(\r\n        <div class='container'>\r\n            <h4 className='center'>Reminder List App</h4>\r\n            <br />\r\n            <ReminderApp  />          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App2;","import React, {Component} from 'react';\r\n\r\nclass App3Input extends Component {\r\n\r\n    state = {\r\n        min: ' ',\r\n        max: ' ',\r\n        message: ' '\r\n    }\r\n\r\n    handleChangeMin = (e) => {\r\n\r\n        this.setState({min: e.target.value});\r\n\r\n    }\r\n\r\n    handleChangeMax = (e) => {\r\n\r\n        this.setState({max: e.target.value});\r\n\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        \r\n        e.preventDefault();\r\n    \r\n    }\r\n\r\n    handleReset = () => {\r\n\r\n        this.setState({min: ' ', max: ' ', message: ' '})\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const style = {\r\n            color: 'blueviolet',\r\n            fontSize: '27px'\r\n        }\r\n\r\n        const styleErr = {\r\n            color: 'red',\r\n            fontSize: '22px'\r\n        }\r\n\r\n        const output = () => {           \r\n               \r\n             try {  \r\n\r\n                let min = this.state.min\r\n                let max = this.state.max\r\n                let min1 = Math.floor(min);\r\n                let max1 = Math.ceil(max);\r\n                let equ = Math.floor(Math.random() * (max1 - min1 + 1)) + min1;         \r\n\r\n\r\n                if (min == ' ')  throw  'You must enter a number as a minimum value.'\r\n                if (max == ' ')  throw   'You must enter a number as a maximum number.'\r\n                if (max <= min)  throw    'The number as your maximum number must be greater than your minimum number.'\r\n                if (isNaN(min))  throw   'You must enter a number.'           \r\n                if (isNaN(max))  throw    'You must enter a number.'              \r\n                                               \r\n                else {this.setState({message: equ })}                  \r\n               \r\n             }\r\n            \r\n\r\n            catch (error) {\r\n\r\n                this.setState({message: error})\r\n\r\n            }\r\n            \r\n        } \r\n\r\n        return(\r\n            <div className=\"container\">\r\n            <div className='center'>\r\n            <h6 > After entering your numbers, click the submit button multiple times to generate different numbers between your minimum and your maximum numbers.  Make sure that the first digit of your maximum number is larger than the first digit of your minimum number. </h6>\r\n\r\n            <br />\r\n            <br />\r\n            <br />\r\n\r\n            <form onSubmit={this.handleSubmit}>\r\n            <div>\r\n                <p>Enter your minimum number:</p>\r\n                <input type='number'  id='min'  name='min' placeholder='Min. Number'  value={this.state.min}    onChange={this.handleChangeMin} />\r\n                <br/>\r\n                <br />\r\n                <br />\r\n                <p>Enter your maximum number:</p>\r\n                <input type='number'  id='max'  name='max' placeholder='Max. Number'  value={this.state.max}   onChange={this.handleChangeMax} />\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <p> <span style={style}> <b>{this.state.message}  </b> </span> </p> \r\n                <br/>\r\n                <br/>\r\n                <button  onClick={output}  className='btn-large blue lighten-3 waves-effect waves-light'> Submit</button> \r\n                <br/>\r\n                <br/>\r\n\r\n                <button id='reset' onClick={this.handleReset}  className='btn-small red lighten-3 waves-effect waves-light'> Reset </button> \r\n            </div>\r\n            </form>\r\n             <br/>\r\n             <br/>                \r\n            <br />\r\n            <br />\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App3Input;","import React from 'react';\r\nimport App3Input from './App3-Input';\r\n\r\n\r\nconst App3 = () => { \r\n\r\n    return(\r\n        <div class='container'>\r\n            <h4 className='center'>Random Number Generator App</h4>\r\n            <br />\r\n            <App3Input  />           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App3;","import React from 'react';\r\n\r\n\r\n\r\nconst App4 = () => { \r\n\r\n    const style = {\r\n        color: 'black',\r\n        fontSize: '30px', \r\n        textAlign: 'center'       \r\n\r\n    }\r\n\r\n    return(\r\n        <div class='container'>\r\n            <h4 className='center'>Arithmetic App</h4>  \r\n            <br></br> \r\n            <br></br> \r\n            <br></br> \r\n          \r\n            <p  style={style}><b> Coming soon... </b> </p>  \r\n            <br></br> \r\n            <br></br> \r\n            <br></br>       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App4;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nclass Post extends Component {\r\n\r\n   /*  state = {\r\n        id: null,\r\n        post: null\r\n    } */\r\n\r\n   /*  componentDidMount() {\r\n        let id = this.props.match.params.post_id;\r\n        let {post} = this.props; \r\n        this.setState({ post: post})\r\n    } */\r\n\r\n\r\n    \r\n \r\n  /*    state = {\r\n        id: null,\r\n        post: null\r\n    } \r\n\r\n     componentDidMount() {\r\n        let id = this.props.match.params.post_id;\r\n        let {post} = this.state.props; \r\n        this.setState({ post: post});\r\n    }   */\r\n\r\n  \r\n    render() {\r\n\r\n         /* let {post} = this.props;   */\r\n\r\n        /*   const  post = this.state.props.post ? <div className='post'> \r\n            <p><span style={{color:'purple', fontSize:'20px'}}><b>Description:</b></span> {this.state.post.body}</p>   \r\n        </div> \r\n        : (\r\n            <div className='center' style={{color:'purple', fontSize:'43px'}} >\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <b>Click on any link above</b> \r\n            \r\n            </div>\r\n        ) \r\n */\r\n\r\n\r\n         const post = this.props.post ? (<div className='post'> \r\n            <p><span style={{color:'purple', fontSize:'20px'}}><b>Description:</b></span> {this.props.post.body}</p>   \r\n        </div> \r\n        ): (\r\n            <div className='center' style={{color:'purple', fontSize:'43px'}} >\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <b>Click on any link above</b> \r\n            \r\n            </div>\r\n        )  \r\n\r\n\r\n\r\n        return(\r\n            <div className='container'>\r\n           \r\n                {post}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => { \r\n    let id = ownProps.match.params.post_id  \r\n    return{\r\n        post: state.posts.find(post => post.id === id)  \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Post);  \r\n","import React, {Component} from 'react';\r\nimport Navbar from './Navbar';\r\nimport {BrowserRouter as Router, Route } from 'react-router-dom'; \r\nimport Home from './Home';\r\nimport App1 from './App1';\r\nimport App2 from './App2';\r\nimport App3 from './App3';\r\nimport App4 from './App4';\r\nimport Post from './Post';\r\n\r\n\r\nclass JEPortfolio extends Component {\r\n    render() {\r\n        return(          \r\n           \r\n            <Router> \r\n                 <div>\r\n                        <Navbar />   \r\n                          \r\n                        <Route  exact path='/'  component={Home}  /> \r\n                        <Route  path='/App1'  component={App1}  /> \r\n                        <Route  path='/App2'  component={App2}  /> \r\n                        <Route  path='/App3'  component={App3}  /> \r\n                        <Route  path='/App4'  component={App4}  /> \r\n                        <Route  path= \"/:post_id\" component={Post} /> \r\n                                       \r\n                  \r\n                 </div>\r\n                </Router>                \r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default JEPortfolio;","\r\n\r\nconst initState = {\r\n    posts: [\r\n        {id: 'App1', title: 'Event Date Calculator App (App1)', body: 'This app will allow you to calculate how many days are remaining until your upcoming event which will be a future date that you pick.', src:'https://images.unsplash.com/photo-1521020773588-3b28297b1e70?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60'  },\r\n        {id: 'App2', title: 'Reminder List App (App2)', body: 'This app will allow you to type any reminders that you do not want to forget and that you do want to complete.  It is accompanied with a checkbox so that you can check off any reminders that you have completed. You can also delete an item by clicking on the \" - \" icon to the right of it.', src:'https://images.unsplash.com/photo-1488998427799-e3362cec87c3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60' },\r\n        {id: 'App3', title: 'Random Number Generator App (App3)', body: 'This app allows you to generate random numbers from two number values that you enter. One of the numbers has to be a minimum number and the other number has to be the maximum number.', src:'https://images.unsplash.com/photo-1502570149819-b2260483d302?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60' },\r\n        {id: 'App4', title: 'Arithmetic App (App4)', body: 'This app can be likened to a game (of some sort).  It starts with a number and every 3 seconds it prompts you to click on the button associated with what the prompt says.', src:'https://images.unsplash.com/photo-1509228468518-180dd4864904?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60' }\r\n    ]\r\n}\r\n\r\nconst rootReducer = (state = initState,action) => {\r\n    return state;\r\n\r\n}\r\n\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport JEPortfolio from './JE Portfolio';\nimport rootReducer from './rootReducer';\nimport './JE Portfolio.css';\nimport './ReminderTemplate.css';\n\n\n\nconst store = createStore(rootReducer);\n\n\nReactDOM.render( <Provider store={store}> <JEPortfolio /> </Provider> , document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}